C:\Program Files\MongoDB\Server\bin>mongo
MongoDB shell version v3.6.23
connecting to: mongodb://127.0.0.1:27017/?gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("e96f9375-f8ae-4446-ada2-7a6aa55f5a36") }
MongoDB server version: 3.6.23
Server has startup warnings:
2024-05-01T08:41:31.935+0530 I CONTROL  [initandlisten]
2024-05-01T08:41:31.935+0530 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2024-05-01T08:41:31.937+0530 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2024-05-01T08:41:31.941+0530 I CONTROL  [initandlisten]
2024-05-01T08:41:31.943+0530 I CONTROL  [initandlisten] ** WARNING: This server is bound to localhost.
2024-05-01T08:41:31.945+0530 I CONTROL  [initandlisten] **          Remote systems will be unable to connect to this server.
2024-05-01T08:41:31.946+0530 I CONTROL  [initandlisten] **          Start the server with --bind_ip <address> to specify which IP
2024-05-01T08:41:31.947+0530 I CONTROL  [initandlisten] **          addresses it should serve responses from, or with --bind_ip_all to
2024-05-01T08:41:31.948+0530 I CONTROL  [initandlisten] **          bind to all interfaces. If this behavior is desired, start the
2024-05-01T08:41:31.949+0530 I CONTROL  [initandlisten] **          server with --bind_ip 127.0.0.1 to disable this warning.
2024-05-01T08:41:31.950+0530 I CONTROL  [initandlisten]
> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
> db.createDatabase("mydb")
2024-05-01T09:07:37.695+0530 E QUERY    [thread1] TypeError: db.createDatabase is not a function :
@(shell):1:1
> use mydb
switched to db mydb
> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
> db.createCollection("studet")
{ "ok" : 1 }
> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
mydb    0.000GB
> db.studet.drop()
true
> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
> db.createCollection("student")
{ "ok" : 1 }
> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
mydb    0.000GB
> db.student.insertOne("{studName:"Hari",srollNo:101,marks:10}")
2024-05-01T09:12:40.032+0530 E QUERY    [thread1] SyntaxError: missing ) after argument list @(shell):1:33
> db.student.insertOne({studName:"Hari",srollNo:101,marks:10})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("6631ba70a3568144138f67f0")
}
> db.student.find().pretty()
{
        "_id" : ObjectId("6631ba70a3568144138f67f0"),
        "studName" : "Hari",
        "srollNo" : 101,
        "marks" : 10
}
> show dbs
SBMongo  0.000GB
admin    0.000GB
config   0.000GB
local    0.000GB
mydb     0.000GB
> use SBMongo
switched to db SBMongo
> show collections
empl_col
> db.empl_col.find()
{ "_id" : ObjectId("6631bb65dfb9cc3f97f113d3"), "ename" : "ABC", "dept" : "DEV", "esal" : 12000, "_class" : "com.har.journey.model.Employee" }
> db.empl_col.find().pretty()
{
        "_id" : ObjectId("6631bb65dfb9cc3f97f113d3"),
        "ename" : "ABC",
        "dept" : "DEV",
        "esal" : 12000,
        "_class" : "com.har.journey.model.Employee"
}
> db.empl_col.find().pretty()
{
        "_id" : ObjectId("6631bb65dfb9cc3f97f113d3"),
        "ename" : "ABC",
        "dept" : "DEV",
        "esal" : 12000,
        "_class" : "com.har.journey.model.Employee"
}
{
        "_id" : ObjectId("6631bc2f083bee2e54d85387"),
        "ename" : "DEF",
        "dept" : "QA",
        "esal" : 8000,
        "_class" : "com.har.journey.model.Employee"
}
{
        "_id" : ObjectId("6631bc864f996a0eced30278"),
        "ename" : "MNO",
        "dept" : "MGR",
        "esal" : 24000,
        "_class" : "com.har.journey.model.Employee"
}
> db.empl_col.find().pretty()
{
        "_id" : ObjectId("6631bc2f083bee2e54d85387"),
        "ename" : "DEF",
        "dept" : "QA",
        "esal" : 8000,
        "_class" : "com.har.journey.model.Employee"
}
{
        "_id" : ObjectId("6631bc864f996a0eced30278"),
        "ename" : "MNO",
        "dept" : "MGR",
        "esal" : 24000,
        "_class" : "com.har.journey.model.Employee"
}
{
        "_id" : ObjectId("6631be458027bd090522442f"),
        "ename" : "GHI",
        "dept" : "DEV",
        "esal" : 13000,
        "_class" : "com.har.journey.model.Employee"
}
{
        "_id" : ObjectId("6631bea72fbe76526614de73"),
        "ename" : "PQR",
        "dept" : "DEV",
        "esal" : 11000,
        "_class" : "com.har.journey.model.Employee"
}
{
        "_id" : ObjectId("6631bf311174082c3f1d94ef"),
        "ename" : "One",
        "dept" : "DEV",
        "esal" : 9000,
        "_class" : "com.har.journey.model.Employee"
}
{
        "_id" : ObjectId("6631bf7a569ffd151f55f4a6"),
        "ename" : "TWO",
        "dept" : "DEV",
        "esal" : 8000,
        "_class" : "com.har.journey.model.Employee"
}
>





















